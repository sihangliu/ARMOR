digraph "CFG for '_Z19BlkSchlsEqEuroNoDivfffffifPfS_' function" {
	label="CFG for '_Z19BlkSchlsEqEuroNoDivfffffifPfS_' function";

	Node0x121beb0 [shape=record,label="{entry:\l  %sptprice.addr = alloca float, align 4\l  %strike.addr = alloca float, align 4\l  %rate.addr = alloca float, align 4\l  %volatility.addr = alloca float, align 4\l  %time.addr = alloca float, align 4\l  %otype.addr = alloca i32, align 4\l  %timet.addr = alloca float, align 4\l  %N1.addr = alloca float*, align 8\l  %N2.addr = alloca float*, align 8\l  %OptionPrice = alloca float, align 4\l  %xRiskFreeRate = alloca float, align 4\l  %xVolatility = alloca float, align 4\l  %xTime = alloca float, align 4\l  %xSqrtTime = alloca float, align 4\l  %logValues = alloca float, align 4\l  %xLogTerm = alloca float, align 4\l  %xD1 = alloca float, align 4\l  %xD2 = alloca float, align 4\l  %xPowerTerm = alloca float, align 4\l  %xDen = alloca float, align 4\l  %d1 = alloca float, align 4\l  %d2 = alloca float, align 4\l  %FutureValueX = alloca float, align 4\l  %NofXd1 = alloca float, align 4\l  %NofXd2 = alloca float, align 4\l  %NegNofXd1 = alloca float, align 4\l  %NegNofXd2 = alloca float, align 4\l  store float %sptprice, float* %sptprice.addr, align 4\l  store float %strike, float* %strike.addr, align 4\l  store float %rate, float* %rate.addr, align 4\l  store float %volatility, float* %volatility.addr, align 4\l  store float %time, float* %time.addr, align 4\l  store i32 %otype, i32* %otype.addr, align 4\l  store float %timet, float* %timet.addr, align 4\l  store float* %N1, float** %N1.addr, align 8\l  store float* %N2, float** %N2.addr, align 8\l  %0 = load float* %rate.addr, align 4\l  store float %0, float* %xRiskFreeRate, align 4\l  %1 = load float* %volatility.addr, align 4\l  store float %1, float* %xVolatility, align 4\l  %2 = load float* %time.addr, align 4\l  store float %2, float* %xTime, align 4\l  %3 = load float* %xTime, align 4\l  %conv = fpext float %3 to double\l  %call = call double @sqrt(double %conv) #1\l  %conv1 = fptrunc double %call to float\l  store float %conv1, float* %xSqrtTime, align 4\l  %4 = load float* %sptprice.addr, align 4\l  %5 = load float* %strike.addr, align 4\l  %div = fdiv float %4, %5\l  %conv2 = fpext float %div to double\l  %call3 = call double @log(double %conv2) #1\l  %conv4 = fptrunc double %call3 to float\l  store float %conv4, float* %logValues, align 4\l  %6 = load float* %logValues, align 4\l  store float %6, float* %xLogTerm, align 4\l  %7 = load float* %xVolatility, align 4\l  %8 = load float* %xVolatility, align 4\l  %mul = fmul float %7, %8\l  store float %mul, float* %xPowerTerm, align 4\l  %9 = load float* %xPowerTerm, align 4\l  %conv5 = fpext float %9 to double\l  %mul6 = fmul double %conv5, 5.000000e-01\l  %conv7 = fptrunc double %mul6 to float\l  store float %conv7, float* %xPowerTerm, align 4\l  %10 = load float* %xRiskFreeRate, align 4\l  %11 = load float* %xPowerTerm, align 4\l  %add = fadd float %10, %11\l  store float %add, float* %xD1, align 4\l  %12 = load float* %xD1, align 4\l  %13 = load float* %xTime, align 4\l  %mul8 = fmul float %12, %13\l  store float %mul8, float* %xD1, align 4\l  %14 = load float* %xD1, align 4\l  %15 = load float* %xLogTerm, align 4\l  %add9 = fadd float %14, %15\l  store float %add9, float* %xD1, align 4\l  %16 = load float* %xVolatility, align 4\l  %17 = load float* %xSqrtTime, align 4\l  %mul10 = fmul float %16, %17\l  store float %mul10, float* %xDen, align 4\l  %18 = load float* %xD1, align 4\l  %19 = load float* %xDen, align 4\l  %div11 = fdiv float %18, %19\l  store float %div11, float* %xD1, align 4\l  %20 = load float* %xD1, align 4\l  %21 = load float* %xDen, align 4\l  %sub = fsub float %20, %21\l  store float %sub, float* %xD2, align 4\l  %22 = load float* %xD1, align 4\l  store float %22, float* %d1, align 4\l  %23 = load float* %xD2, align 4\l  store float %23, float* %d2, align 4\l  %24 = load float* %d1, align 4\l  %call12 = call float @_Z4CNDFf(float %24)\l  store float %call12, float* %NofXd1, align 4\l  %25 = load float* %NofXd1, align 4\l  %conv13 = fpext float %25 to double\l  %cmp = fcmp ogt double %conv13, 1.000000e+00\l  br i1 %cmp, label %if.then, label %if.end\l|{<s0>T|<s1>F}}"];
	Node0x121beb0:s0 -> Node0x121bf10;
	Node0x121beb0:s1 -> Node0x121bf70;
	Node0x121bf10 [shape=record,label="{if.then:                                          \l  %call14 = call %\"class.std::basic_ostream\"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%\"class.std::basic_ostream\"* @_ZSt4cerr, i8* getelementptr inbounds ([18 x i8]* @.str, i32 0, i32 0))\l  %call15 = call %\"class.std::basic_ostream\"* @_ZNSolsEPFRSoS_E(%\"class.std::basic_ostream\"* %call14, %\"class.std::basic_ostream\"* (%\"class.std::basic_ostream\"*)* @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)\l  br label %if.end\l}"];
	Node0x121bf10 -> Node0x121bf70;
	Node0x121bf70 [shape=record,label="{if.end:                                           \l  %26 = load float* %d2, align 4\l  %call16 = call float @_Z4CNDFf(float %26)\l  store float %call16, float* %NofXd2, align 4\l  %27 = load float* %NofXd2, align 4\l  %conv17 = fpext float %27 to double\l  %cmp18 = fcmp ogt double %conv17, 1.000000e+00\l  br i1 %cmp18, label %if.then19, label %if.end22\l|{<s0>T|<s1>F}}"];
	Node0x121bf70:s0 -> Node0x121bfd0;
	Node0x121bf70:s1 -> Node0x121c030;
	Node0x121bfd0 [shape=record,label="{if.then19:                                        \l  %call20 = call %\"class.std::basic_ostream\"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%\"class.std::basic_ostream\"* @_ZSt4cerr, i8* getelementptr inbounds ([18 x i8]* @.str, i32 0, i32 0))\l  %call21 = call %\"class.std::basic_ostream\"* @_ZNSolsEPFRSoS_E(%\"class.std::basic_ostream\"* %call20, %\"class.std::basic_ostream\"* (%\"class.std::basic_ostream\"*)* @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)\l  br label %if.end22\l}"];
	Node0x121bfd0 -> Node0x121c030;
	Node0x121c030 [shape=record,label="{if.end22:                                         \l  %28 = load float* %NofXd1, align 4\l  %29 = load float** %N1.addr, align 8\l  store float %28, float* %29, align 4\l  %30 = load float* %NofXd2, align 4\l  %31 = load float** %N2.addr, align 8\l  store float %30, float* %31, align 4\l  %32 = load float* %strike.addr, align 4\l  %conv23 = fpext float %32 to double\l  %33 = load float* %rate.addr, align 4\l  %sub24 = fsub float -0.000000e+00, %33\l  %34 = load float* %time.addr, align 4\l  %mul25 = fmul float %sub24, %34\l  %conv26 = fpext float %mul25 to double\l  %call27 = call double @exp(double %conv26) #1\l  %mul28 = fmul double %conv23, %call27\l  %conv29 = fptrunc double %mul28 to float\l  store float %conv29, float* %FutureValueX, align 4\l  %35 = load i32* %otype.addr, align 4\l  %cmp30 = icmp eq i32 %35, 0\l  br i1 %cmp30, label %if.then31, label %if.else\l|{<s0>T|<s1>F}}"];
	Node0x121c030:s0 -> Node0x121c090;
	Node0x121c030:s1 -> Node0x121c0f0;
	Node0x121c090 [shape=record,label="{if.then31:                                        \l  %36 = load float* %sptprice.addr, align 4\l  %37 = load float* %NofXd1, align 4\l  %mul32 = fmul float %36, %37\l  %38 = load float* %FutureValueX, align 4\l  %39 = load float* %NofXd2, align 4\l  %mul33 = fmul float %38, %39\l  %sub34 = fsub float %mul32, %mul33\l  store float %sub34, float* %OptionPrice, align 4\l  br label %if.end44\l}"];
	Node0x121c090 -> Node0x121c150;
	Node0x121c0f0 [shape=record,label="{if.else:                                          \l  %40 = load float* %NofXd1, align 4\l  %conv35 = fpext float %40 to double\l  %sub36 = fsub double 1.000000e+00, %conv35\l  %conv37 = fptrunc double %sub36 to float\l  store float %conv37, float* %NegNofXd1, align 4\l  %41 = load float* %NofXd2, align 4\l  %conv38 = fpext float %41 to double\l  %sub39 = fsub double 1.000000e+00, %conv38\l  %conv40 = fptrunc double %sub39 to float\l  store float %conv40, float* %NegNofXd2, align 4\l  %42 = load float* %FutureValueX, align 4\l  %43 = load float* %NegNofXd2, align 4\l  %mul41 = fmul float %42, %43\l  %44 = load float* %sptprice.addr, align 4\l  %45 = load float* %NegNofXd1, align 4\l  %mul42 = fmul float %44, %45\l  %sub43 = fsub float %mul41, %mul42\l  store float %sub43, float* %OptionPrice, align 4\l  br label %if.end44\l}"];
	Node0x121c0f0 -> Node0x121c150;
	Node0x121c150 [shape=record,label="{if.end44:                                         \l  %46 = load float* %OptionPrice, align 4\l  ret float %46\l}"];
}
