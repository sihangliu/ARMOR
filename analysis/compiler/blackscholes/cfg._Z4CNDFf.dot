digraph "CFG for '_Z4CNDFf' function" {
	label="CFG for '_Z4CNDFf' function";

	Node0x120a5f0 [shape=record,label="{entry:\l  %InputX.addr = alloca float, align 4\l  %sign = alloca i32, align 4\l  %OutputX = alloca float, align 4\l  %xInput = alloca float, align 4\l  %xNPrimeofX = alloca float, align 4\l  %expValues = alloca float, align 4\l  %xK2 = alloca float, align 4\l  %xK2_2 = alloca float, align 4\l  %xK2_3 = alloca float, align 4\l  %xK2_4 = alloca float, align 4\l  %xK2_5 = alloca float, align 4\l  %xLocal = alloca float, align 4\l  %xLocal_1 = alloca float, align 4\l  %xLocal_2 = alloca float, align 4\l  %xLocal_3 = alloca float, align 4\l  store float %InputX, float* %InputX.addr, align 4\l  %0 = load float* %InputX.addr, align 4\l  %conv = fpext float %0 to double\l  %cmp = fcmp olt double %conv, 0.000000e+00\l  br i1 %cmp, label %if.then, label %if.else\l|{<s0>T|<s1>F}}"];
	Node0x120a5f0:s0 -> Node0x120a650;
	Node0x120a5f0:s1 -> Node0x120a6b0;
	Node0x120a650 [shape=record,label="{if.then:                                          \l  %1 = load float* %InputX.addr, align 4\l  %sub = fsub float -0.000000e+00, %1\l  store float %sub, float* %InputX.addr, align 4\l  store i32 1, i32* %sign, align 4\l  br label %if.end\l}"];
	Node0x120a650 -> Node0x120a710;
	Node0x120a6b0 [shape=record,label="{if.else:                                          \l  store i32 0, i32* %sign, align 4\l  br label %if.end\l}"];
	Node0x120a6b0 -> Node0x120a710;
	Node0x120a710 [shape=record,label="{if.end:                                           \l  %2 = load float* %InputX.addr, align 4\l  store float %2, float* %xInput, align 4\l  %3 = load float* %InputX.addr, align 4\l  %mul = fmul float -5.000000e-01, %3\l  %4 = load float* %InputX.addr, align 4\l  %mul1 = fmul float %mul, %4\l  %conv2 = fpext float %mul1 to double\l  %call = call double @exp(double %conv2) #1\l  %conv3 = fptrunc double %call to float\l  store float %conv3, float* %expValues, align 4\l  %5 = load float* %expValues, align 4\l  store float %5, float* %xNPrimeofX, align 4\l  %6 = load float* %xNPrimeofX, align 4\l  %conv4 = fpext float %6 to double\l  %mul5 = fmul double %conv4, 0x3FD9884533D43651\l  %conv6 = fptrunc double %mul5 to float\l  store float %conv6, float* %xNPrimeofX, align 4\l  %7 = load float* %xInput, align 4\l  %conv7 = fpext float %7 to double\l  %mul8 = fmul double 2.316419e-01, %conv7\l  %conv9 = fptrunc double %mul8 to float\l  store float %conv9, float* %xK2, align 4\l  %8 = load float* %xK2, align 4\l  %conv10 = fpext float %8 to double\l  %add = fadd double 1.000000e+00, %conv10\l  %conv11 = fptrunc double %add to float\l  store float %conv11, float* %xK2, align 4\l  %9 = load float* %xK2, align 4\l  %conv12 = fpext float %9 to double\l  %div = fdiv double 1.000000e+00, %conv12\l  %conv13 = fptrunc double %div to float\l  store float %conv13, float* %xK2, align 4\l  %10 = load float* %xK2, align 4\l  %11 = load float* %xK2, align 4\l  %mul14 = fmul float %10, %11\l  store float %mul14, float* %xK2_2, align 4\l  %12 = load float* %xK2_2, align 4\l  %13 = load float* %xK2, align 4\l  %mul15 = fmul float %12, %13\l  store float %mul15, float* %xK2_3, align 4\l  %14 = load float* %xK2_3, align 4\l  %15 = load float* %xK2, align 4\l  %mul16 = fmul float %14, %15\l  store float %mul16, float* %xK2_4, align 4\l  %16 = load float* %xK2_4, align 4\l  %17 = load float* %xK2, align 4\l  %mul17 = fmul float %16, %17\l  store float %mul17, float* %xK2_5, align 4\l  %18 = load float* %xK2, align 4\l  %conv18 = fpext float %18 to double\l  %mul19 = fmul double %conv18, 0x3FD470BF3A92F8EC\l  %conv20 = fptrunc double %mul19 to float\l  store float %conv20, float* %xLocal_1, align 4\l  %19 = load float* %xK2_2, align 4\l  %conv21 = fpext float %19 to double\l  %mul22 = fmul double %conv21, 0xBFD6D1F0E5A8325B\l  %conv23 = fptrunc double %mul22 to float\l  store float %conv23, float* %xLocal_2, align 4\l  %20 = load float* %xK2_3, align 4\l  %conv24 = fpext float %20 to double\l  %mul25 = fmul double %conv24, 0x3FFC80EF025F5E68\l  %conv26 = fptrunc double %mul25 to float\l  store float %conv26, float* %xLocal_3, align 4\l  %21 = load float* %xLocal_2, align 4\l  %22 = load float* %xLocal_3, align 4\l  %add27 = fadd float %21, %22\l  store float %add27, float* %xLocal_2, align 4\l  %23 = load float* %xK2_4, align 4\l  %conv28 = fpext float %23 to double\l  %mul29 = fmul double %conv28, 0xBFFD23DD4EF278D0\l  %conv30 = fptrunc double %mul29 to float\l  store float %conv30, float* %xLocal_3, align 4\l  %24 = load float* %xLocal_2, align 4\l  %25 = load float* %xLocal_3, align 4\l  %add31 = fadd float %24, %25\l  store float %add31, float* %xLocal_2, align 4\l  %26 = load float* %xK2_5, align 4\l  %conv32 = fpext float %26 to double\l  %mul33 = fmul double %conv32, 0x3FF548CDD6F42943\l  %conv34 = fptrunc double %mul33 to float\l  store float %conv34, float* %xLocal_3, align 4\l  %27 = load float* %xLocal_2, align 4\l  %28 = load float* %xLocal_3, align 4\l  %add35 = fadd float %27, %28\l  store float %add35, float* %xLocal_2, align 4\l  %29 = load float* %xLocal_2, align 4\l  %30 = load float* %xLocal_1, align 4\l  %add36 = fadd float %29, %30\l  store float %add36, float* %xLocal_1, align 4\l  %31 = load float* %xLocal_1, align 4\l  %32 = load float* %xNPrimeofX, align 4\l  %mul37 = fmul float %31, %32\l  store float %mul37, float* %xLocal, align 4\l  %33 = load float* %xLocal, align 4\l  %conv38 = fpext float %33 to double\l  %sub39 = fsub double 1.000000e+00, %conv38\l  %conv40 = fptrunc double %sub39 to float\l  store float %conv40, float* %xLocal, align 4\l  %34 = load float* %xLocal, align 4\l  store float %34, float* %OutputX, align 4\l  %35 = load i32* %sign, align 4\l  %tobool = icmp ne i32 %35, 0\l  br i1 %tobool, label %if.then41, label %if.end45\l|{<s0>T|<s1>F}}"];
	Node0x120a710:s0 -> Node0x120a770;
	Node0x120a710:s1 -> Node0x120a7d0;
	Node0x120a770 [shape=record,label="{if.then41:                                        \l  %36 = load float* %OutputX, align 4\l  %conv42 = fpext float %36 to double\l  %sub43 = fsub double 1.000000e+00, %conv42\l  %conv44 = fptrunc double %sub43 to float\l  store float %conv44, float* %OutputX, align 4\l  br label %if.end45\l}"];
	Node0x120a770 -> Node0x120a7d0;
	Node0x120a7d0 [shape=record,label="{if.end45:                                         \l  %37 = load float* %OutputX, align 4\l  ret float %37\l}"];
}
