digraph "CFG for '_Z14calcFftIndicesiPi' function" {
	label="CFG for '_Z14calcFftIndicesiPi' function";

	Node0x19fbe60 [shape=record,label="{entry:\l  %K.addr = alloca i32, align 4\l  %indices.addr = alloca i32*, align 8\l  %i = alloca i32, align 4\l  %j = alloca i32, align 4\l  %N = alloca i32, align 4\l  store i32 %K, i32* %K.addr, align 4\l  store i32* %indices, i32** %indices.addr, align 8\l  %0 = load i32* %K.addr, align 4\l  %conv = sitofp i32 %0 to float\l  %call = call float @log2f(float %conv) #3\l  %conv1 = fptosi float %call to i32\l  store i32 %conv1, i32* %N, align 4\l  %1 = load i32** %indices.addr, align 8\l  %arrayidx = getelementptr inbounds i32* %1, i64 0\l  store i32 0, i32* %arrayidx, align 4\l  %2 = load i32* %N, align 4\l  %sub = sub nsw i32 %2, 1\l  %shl = shl i32 1, %sub\l  %3 = load i32** %indices.addr, align 8\l  %arrayidx2 = getelementptr inbounds i32* %3, i64 1\l  store i32 %shl, i32* %arrayidx2, align 4\l  store i32 1, i32* %i, align 4\l  br label %for.cond\l}"];
	Node0x19fbe60 -> Node0x19fbec0;
	Node0x19fbec0 [shape=record,label="{for.cond:                                         \l  %4 = load i32* %i, align 4\l  %5 = load i32* %N, align 4\l  %cmp = icmp slt i32 %4, %5\l  br i1 %cmp, label %for.body, label %for.end19\l|{<s0>T|<s1>F}}"];
	Node0x19fbec0:s0 -> Node0x19fbf20;
	Node0x19fbec0:s1 -> Node0x19fc160;
	Node0x19fbf20 [shape=record,label="{for.body:                                         \l  %6 = load i32* %i, align 4\l  %shl3 = shl i32 1, %6\l  store i32 %shl3, i32* %j, align 4\l  br label %for.cond4\l}"];
	Node0x19fbf20 -> Node0x19fbf80;
	Node0x19fbf80 [shape=record,label="{for.cond4:                                        \l  %7 = load i32* %j, align 4\l  %8 = load i32* %i, align 4\l  %add = add nsw i32 %8, 1\l  %shl5 = shl i32 1, %add\l  %cmp6 = icmp slt i32 %7, %shl5\l  br i1 %cmp6, label %for.body7, label %for.end\l|{<s0>T|<s1>F}}"];
	Node0x19fbf80:s0 -> Node0x19fbfe0;
	Node0x19fbf80:s1 -> Node0x19fc0a0;
	Node0x19fbfe0 [shape=record,label="{for.body7:                                        \l  %9 = load i32* %j, align 4\l  %10 = load i32* %i, align 4\l  %shl8 = shl i32 1, %10\l  %sub9 = sub nsw i32 %9, %shl8\l  %idxprom = sext i32 %sub9 to i64\l  %11 = load i32** %indices.addr, align 8\l  %arrayidx10 = getelementptr inbounds i32* %11, i64 %idxprom\l  %12 = load i32* %arrayidx10, align 4\l  %13 = load i32* %N, align 4\l  %14 = load i32* %i, align 4\l  %add11 = add nsw i32 %14, 1\l  %sub12 = sub nsw i32 %13, %add11\l  %shl13 = shl i32 1, %sub12\l  %add14 = add nsw i32 %12, %shl13\l  %15 = load i32* %j, align 4\l  %idxprom15 = sext i32 %15 to i64\l  %16 = load i32** %indices.addr, align 8\l  %arrayidx16 = getelementptr inbounds i32* %16, i64 %idxprom15\l  store i32 %add14, i32* %arrayidx16, align 4\l  br label %for.inc\l}"];
	Node0x19fbfe0 -> Node0x19fc040;
	Node0x19fc040 [shape=record,label="{for.inc:                                          \l  %17 = load i32* %j, align 4\l  %inc = add nsw i32 %17, 1\l  store i32 %inc, i32* %j, align 4\l  br label %for.cond4\l}"];
	Node0x19fc040 -> Node0x19fbf80;
	Node0x19fc0a0 [shape=record,label="{for.end:                                          \l  br label %for.inc17\l}"];
	Node0x19fc0a0 -> Node0x19fc100;
	Node0x19fc100 [shape=record,label="{for.inc17:                                        \l  %18 = load i32* %i, align 4\l  %inc18 = add nsw i32 %18, 1\l  store i32 %inc18, i32* %i, align 4\l  br label %for.cond\l}"];
	Node0x19fc100 -> Node0x19fbec0;
	Node0x19fc160 [shape=record,label="{for.end19:                                        \l  ret void\l}"];
}
