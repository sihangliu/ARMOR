digraph "CFG for '_Z23radix2DitCooleyTykeyFftiPiP7ComplexS1_' function" {
	label="CFG for '_Z23radix2DitCooleyTykeyFftiPiP7ComplexS1_' function";

	Node0x19fefc0 [shape=record,label="{entry:\l  %K.addr = alloca i32, align 4\l  %indices.addr = alloca i32*, align 8\l  %approx_x.addr = alloca %struct.Complex*, align 8\l  %approx_f.addr = alloca %struct.Complex*, align 8\l  %step = alloca i32, align 4\l  %arg = alloca float, align 4\l  %eI = alloca i32, align 4\l  %oI = alloca i32, align 4\l  %fftSin = alloca float, align 4\l  %fftCos = alloca float, align 4\l  %t = alloca %struct.Complex, align 4\l  %i = alloca i32, align 4\l  %N = alloca i32, align 4\l  %j = alloca i32, align 4\l  %k = alloca i32, align 4\l  %i97 = alloca i32, align 4\l  store i32 %K, i32* %K.addr, align 4\l  store i32* %indices, i32** %indices.addr, align 8\l  store %struct.Complex* %approx_x, %struct.Complex** %approx_x.addr, align 8\l  store %struct.Complex* %approx_f, %struct.Complex** %approx_f.addr, align 8\l  %0 = load i32* %K.addr, align 4\l  %1 = load i32** %indices.addr, align 8\l  call void @_Z14calcFftIndicesiPi(i32 %0, i32* %1)\l  store i32 0, i32* %i, align 4\l  %2 = load i32* %i, align 4\l  %add = add nsw i32 %2, 1\l  %shl = shl i32 1, %add\l  store i32 %shl, i32* %N, align 4\l  br label %for.cond\l}"];
	Node0x19fefc0 -> Node0x19ff020;
	Node0x19ff020 [shape=record,label="{for.cond:                                         \l  %3 = load i32* %N, align 4\l  %4 = load i32* %K.addr, align 4\l  %cmp = icmp sle i32 %3, %4\l  br i1 %cmp, label %for.body, label %for.end96\l|{<s0>T|<s1>F}}"];
	Node0x19ff020:s0 -> Node0x19ff080;
	Node0x19ff020:s1 -> Node0x19ff440;
	Node0x19ff080 [shape=record,label="{for.body:                                         \l  store i32 0, i32* %j, align 4\l  br label %for.cond1\l}"];
	Node0x19ff080 -> Node0x19ff0e0;
	Node0x19ff0e0 [shape=record,label="{for.cond1:                                        \l  %5 = load i32* %j, align 4\l  %6 = load i32* %K.addr, align 4\l  %cmp2 = icmp slt i32 %5, %6\l  br i1 %cmp2, label %for.body3, label %for.end91\l|{<s0>T|<s1>F}}"];
	Node0x19ff0e0:s0 -> Node0x19ff140;
	Node0x19ff0e0:s1 -> Node0x19ff380;
	Node0x19ff140 [shape=record,label="{for.body3:                                        \l  %7 = load i32* %N, align 4\l  %shr = ashr i32 %7, 1\l  store i32 %shr, i32* %step, align 4\l  store i32 0, i32* %k, align 4\l  br label %for.cond4\l}"];
	Node0x19ff140 -> Node0x19ff1a0;
	Node0x19ff1a0 [shape=record,label="{for.cond4:                                        \l  %8 = load i32* %k, align 4\l  %9 = load i32* %step, align 4\l  %cmp5 = icmp slt i32 %8, %9\l  br i1 %cmp5, label %for.body6, label %for.end\l|{<s0>T|<s1>F}}"];
	Node0x19ff1a0:s0 -> Node0x19ff200;
	Node0x19ff1a0:s1 -> Node0x19ff2c0;
	Node0x19ff200 [shape=record,label="{for.body6:                                        \l  %10 = load i32* %k, align 4\l  %conv = sitofp i32 %10 to float\l  %11 = load i32* %N, align 4\l  %conv7 = sitofp i32 %11 to float\l  %div = fdiv float %conv, %conv7\l  store float %div, float* %arg, align 4\l  %12 = load i32* %j, align 4\l  %13 = load i32* %k, align 4\l  %add8 = add nsw i32 %12, %13\l  store i32 %add8, i32* %eI, align 4\l  %14 = load i32* %j, align 4\l  %15 = load i32* %step, align 4\l  %add9 = add nsw i32 %14, %15\l  %16 = load i32* %k, align 4\l  %add10 = add nsw i32 %add9, %16\l  store i32 %add10, i32* %oI, align 4\l  %17 = load float* %arg, align 4\l  call void @_Z9fftSinCosfPfS_(float %17, float* %fftSin, float* %fftCos)\l  %18 = load i32* %eI, align 4\l  %idxprom = sext i32 %18 to i64\l  %19 = load i32** %indices.addr, align 8\l  %arrayidx = getelementptr inbounds i32* %19, i64 %idxprom\l  %20 = load i32* %arrayidx, align 4\l  %idxprom11 = sext i32 %20 to i64\l  %21 = load %struct.Complex** %approx_x.addr, align 8\l  %arrayidx12 = getelementptr inbounds %struct.Complex* %21, i64 %idxprom11\l  %22 = bitcast %struct.Complex* %t to i8*\l  %23 = bitcast %struct.Complex* %arrayidx12 to i8*\l  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %22, i8* %23, i64 8, i32 4, i1 false)\l  %real = getelementptr inbounds %struct.Complex* %t, i32 0, i32 0\l  %24 = load float* %real, align 4\l  %25 = load i32* %oI, align 4\l  %idxprom13 = sext i32 %25 to i64\l  %26 = load i32** %indices.addr, align 8\l  %arrayidx14 = getelementptr inbounds i32* %26, i64 %idxprom13\l  %27 = load i32* %arrayidx14, align 4\l  %idxprom15 = sext i32 %27 to i64\l  %28 = load %struct.Complex** %approx_x.addr, align 8\l  %arrayidx16 = getelementptr inbounds %struct.Complex* %28, i64 %idxprom15\l  %real17 = getelementptr inbounds %struct.Complex* %arrayidx16, i32 0, i32 0\l  %29 = load float* %real17, align 4\l  %30 = load float* %fftCos, align 4\l  %mul = fmul float %29, %30\l  %31 = load i32* %oI, align 4\l  %idxprom18 = sext i32 %31 to i64\l  %32 = load i32** %indices.addr, align 8\l  %arrayidx19 = getelementptr inbounds i32* %32, i64 %idxprom18\l  %33 = load i32* %arrayidx19, align 4\l  %idxprom20 = sext i32 %33 to i64\l  %34 = load %struct.Complex** %approx_x.addr, align 8\l  %arrayidx21 = getelementptr inbounds %struct.Complex* %34, i64 %idxprom20\l  %imag = getelementptr inbounds %struct.Complex* %arrayidx21, i32 0, i32 1\l  %35 = load float* %imag, align 4\l  %36 = load float* %fftSin, align 4\l  %mul22 = fmul float %35, %36\l  %sub = fsub float %mul, %mul22\l  %add23 = fadd float %24, %sub\l  %37 = load i32* %eI, align 4\l  %idxprom24 = sext i32 %37 to i64\l  %38 = load i32** %indices.addr, align 8\l  %arrayidx25 = getelementptr inbounds i32* %38, i64 %idxprom24\l  %39 = load i32* %arrayidx25, align 4\l  %idxprom26 = sext i32 %39 to i64\l  %40 = load %struct.Complex** %approx_x.addr, align 8\l  %arrayidx27 = getelementptr inbounds %struct.Complex* %40, i64 %idxprom26\l  %real28 = getelementptr inbounds %struct.Complex* %arrayidx27, i32 0, i32 0\l  store float %add23, float* %real28, align 4\l  %imag29 = getelementptr inbounds %struct.Complex* %t, i32 0, i32 1\l  %41 = load float* %imag29, align 4\l  %42 = load i32* %oI, align 4\l  %idxprom30 = sext i32 %42 to i64\l  %43 = load i32** %indices.addr, align 8\l  %arrayidx31 = getelementptr inbounds i32* %43, i64 %idxprom30\l  %44 = load i32* %arrayidx31, align 4\l  %idxprom32 = sext i32 %44 to i64\l  %45 = load %struct.Complex** %approx_x.addr, align 8\l  %arrayidx33 = getelementptr inbounds %struct.Complex* %45, i64 %idxprom32\l  %imag34 = getelementptr inbounds %struct.Complex* %arrayidx33, i32 0, i32 1\l  %46 = load float* %imag34, align 4\l  %47 = load float* %fftCos, align 4\l  %mul35 = fmul float %46, %47\l  %48 = load i32* %oI, align 4\l  %idxprom36 = sext i32 %48 to i64\l  %49 = load i32** %indices.addr, align 8\l  %arrayidx37 = getelementptr inbounds i32* %49, i64 %idxprom36\l  %50 = load i32* %arrayidx37, align 4\l  %idxprom38 = sext i32 %50 to i64\l  %51 = load %struct.Complex** %approx_x.addr, align 8\l  %arrayidx39 = getelementptr inbounds %struct.Complex* %51, i64 %idxprom38\l  %real40 = getelementptr inbounds %struct.Complex* %arrayidx39, i32 0, i32 0\l  %52 = load float* %real40, align 4\l  %53 = load float* %fftSin, align 4\l  %mul41 = fmul float %52, %53\l  %add42 = fadd float %mul35, %mul41\l  %add43 = fadd float %41, %add42\l  %54 = load i32* %eI, align 4\l  %idxprom44 = sext i32 %54 to i64\l  %55 = load i32** %indices.addr, align 8\l  %arrayidx45 = getelementptr inbounds i32* %55, i64 %idxprom44\l  %56 = load i32* %arrayidx45, align 4\l  %idxprom46 = sext i32 %56 to i64\l  %57 = load %struct.Complex** %approx_x.addr, align 8\l  %arrayidx47 = getelementptr inbounds %struct.Complex* %57, i64 %idxprom46\l  %imag48 = getelementptr inbounds %struct.Complex* %arrayidx47, i32 0, i32 1\l  store float %add43, float* %imag48, align 4\l  %real49 = getelementptr inbounds %struct.Complex* %t, i32 0, i32 0\l  %58 = load float* %real49, align 4\l  %59 = load i32* %oI, align 4\l  %idxprom50 = sext i32 %59 to i64\l  %60 = load i32** %indices.addr, align 8\l  %arrayidx51 = getelementptr inbounds i32* %60, i64 %idxprom50\l  %61 = load i32* %arrayidx51, align 4\l  %idxprom52 = sext i32 %61 to i64\l  %62 = load %struct.Complex** %approx_x.addr, align 8\l  %arrayidx53 = getelementptr inbounds %struct.Complex* %62, i64 %idxprom52\l  %real54 = getelementptr inbounds %struct.Complex* %arrayidx53, i32 0, i32 0\l  %63 = load float* %real54, align 4\l  %64 = load float* %fftCos, align 4\l  %mul55 = fmul float %63, %64\l  %65 = load i32* %oI, align 4\l  %idxprom56 = sext i32 %65 to i64\l  %66 = load i32** %indices.addr, align 8\l  %arrayidx57 = getelementptr inbounds i32* %66, i64 %idxprom56\l  %67 = load i32* %arrayidx57, align 4\l  %idxprom58 = sext i32 %67 to i64\l  %68 = load %struct.Complex** %approx_x.addr, align 8\l  %arrayidx59 = getelementptr inbounds %struct.Complex* %68, i64 %idxprom58\l  %imag60 = getelementptr inbounds %struct.Complex* %arrayidx59, i32 0, i32 1\l  %69 = load float* %imag60, align 4\l  %70 = load float* %fftSin, align 4\l  %mul61 = fmul float %69, %70\l  %sub62 = fsub float %mul55, %mul61\l  %sub63 = fsub float %58, %sub62\l  %71 = load i32* %oI, align 4\l  %idxprom64 = sext i32 %71 to i64\l  %72 = load i32** %indices.addr, align 8\l  %arrayidx65 = getelementptr inbounds i32* %72, i64 %idxprom64\l  %73 = load i32* %arrayidx65, align 4\l  %idxprom66 = sext i32 %73 to i64\l  %74 = load %struct.Complex** %approx_x.addr, align 8\l  %arrayidx67 = getelementptr inbounds %struct.Complex* %74, i64 %idxprom66\l  %real68 = getelementptr inbounds %struct.Complex* %arrayidx67, i32 0, i32 0\l  store float %sub63, float* %real68, align 4\l  %imag69 = getelementptr inbounds %struct.Complex* %t, i32 0, i32 1\l  %75 = load float* %imag69, align 4\l  %76 = load i32* %oI, align 4\l  %idxprom70 = sext i32 %76 to i64\l  %77 = load i32** %indices.addr, align 8\l  %arrayidx71 = getelementptr inbounds i32* %77, i64 %idxprom70\l  %78 = load i32* %arrayidx71, align 4\l  %idxprom72 = sext i32 %78 to i64\l  %79 = load %struct.Complex** %approx_x.addr, align 8\l  %arrayidx73 = getelementptr inbounds %struct.Complex* %79, i64 %idxprom72\l  %imag74 = getelementptr inbounds %struct.Complex* %arrayidx73, i32 0, i32 1\l  %80 = load float* %imag74, align 4\l  %81 = load float* %fftCos, align 4\l  %mul75 = fmul float %80, %81\l  %82 = load i32* %oI, align 4\l  %idxprom76 = sext i32 %82 to i64\l  %83 = load i32** %indices.addr, align 8\l  %arrayidx77 = getelementptr inbounds i32* %83, i64 %idxprom76\l  %84 = load i32* %arrayidx77, align 4\l  %idxprom78 = sext i32 %84 to i64\l  %85 = load %struct.Complex** %approx_x.addr, align 8\l  %arrayidx79 = getelementptr inbounds %struct.Complex* %85, i64 %idxprom78\l  %real80 = getelementptr inbounds %struct.Complex* %arrayidx79, i32 0, i32 0\l  %86 = load float* %real80, align 4\l  %87 = load float* %fftSin, align 4\l  %mul81 = fmul float %86, %87\l  %add82 = fadd float %mul75, %mul81\l  %sub83 = fsub float %75, %add82\l  %88 = load i32* %oI, align 4\l  %idxprom84 = sext i32 %88 to i64\l  %89 = load i32** %indices.addr, align 8\l  %arrayidx85 = getelementptr inbounds i32* %89, i64 %idxprom84\l  %90 = load i32* %arrayidx85, align 4\l  %idxprom86 = sext i32 %90 to i64\l  %91 = load %struct.Complex** %approx_x.addr, align 8\l  %arrayidx87 = getelementptr inbounds %struct.Complex* %91, i64 %idxprom86\l  %imag88 = getelementptr inbounds %struct.Complex* %arrayidx87, i32 0, i32 1\l  store float %sub83, float* %imag88, align 4\l  br label %for.inc\l}"];
	Node0x19ff200 -> Node0x19ff260;
	Node0x19ff260 [shape=record,label="{for.inc:                                          \l  %92 = load i32* %k, align 4\l  %inc = add nsw i32 %92, 1\l  store i32 %inc, i32* %k, align 4\l  br label %for.cond4\l}"];
	Node0x19ff260 -> Node0x19ff1a0;
	Node0x19ff2c0 [shape=record,label="{for.end:                                          \l  br label %for.inc89\l}"];
	Node0x19ff2c0 -> Node0x19ff320;
	Node0x19ff320 [shape=record,label="{for.inc89:                                        \l  %93 = load i32* %N, align 4\l  %94 = load i32* %j, align 4\l  %add90 = add nsw i32 %94, %93\l  store i32 %add90, i32* %j, align 4\l  br label %for.cond1\l}"];
	Node0x19ff320 -> Node0x19ff0e0;
	Node0x19ff380 [shape=record,label="{for.end91:                                        \l  br label %for.inc92\l}"];
	Node0x19ff380 -> Node0x19ff3e0;
	Node0x19ff3e0 [shape=record,label="{for.inc92:                                        \l  %95 = load i32* %i, align 4\l  %inc93 = add nsw i32 %95, 1\l  store i32 %inc93, i32* %i, align 4\l  %96 = load i32* %i, align 4\l  %add94 = add nsw i32 %96, 1\l  %shl95 = shl i32 1, %add94\l  store i32 %shl95, i32* %N, align 4\l  br label %for.cond\l}"];
	Node0x19ff3e0 -> Node0x19ff020;
	Node0x19ff440 [shape=record,label="{for.end96:                                        \l  store i32 0, i32* %i97, align 4\l  br label %for.cond98\l}"];
	Node0x19ff440 -> Node0x19ff4a0;
	Node0x19ff4a0 [shape=record,label="{for.cond98:                                       \l  %97 = load i32* %i97, align 4\l  %98 = load i32* %K.addr, align 4\l  %cmp99 = icmp slt i32 %97, %98\l  br i1 %cmp99, label %for.body100, label %for.end109\l|{<s0>T|<s1>F}}"];
	Node0x19ff4a0:s0 -> Node0x19ff500;
	Node0x19ff4a0:s1 -> Node0x19ff5c0;
	Node0x19ff500 [shape=record,label="{for.body100:                                      \l  %99 = load i32* %i97, align 4\l  %idxprom101 = sext i32 %99 to i64\l  %100 = load %struct.Complex** %approx_f.addr, align 8\l  %arrayidx102 = getelementptr inbounds %struct.Complex* %100, i64 %idxprom101\l  %101 = load i32* %i97, align 4\l  %idxprom103 = sext i32 %101 to i64\l  %102 = load i32** %indices.addr, align 8\l  %arrayidx104 = getelementptr inbounds i32* %102, i64 %idxprom103\l  %103 = load i32* %arrayidx104, align 4\l  %idxprom105 = sext i32 %103 to i64\l  %104 = load %struct.Complex** %approx_x.addr, align 8\l  %arrayidx106 = getelementptr inbounds %struct.Complex* %104, i64 %idxprom105\l  %105 = bitcast %struct.Complex* %arrayidx102 to i8*\l  %106 = bitcast %struct.Complex* %arrayidx106 to i8*\l  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %105, i8* %106, i64 8, i32 4, i1 false)\l  br label %for.inc107\l}"];
	Node0x19ff500 -> Node0x19ff560;
	Node0x19ff560 [shape=record,label="{for.inc107:                                       \l  %107 = load i32* %i97, align 4\l  %inc108 = add nsw i32 %107, 1\l  store i32 %inc108, i32* %i97, align 4\l  br label %for.cond98\l}"];
	Node0x19ff560 -> Node0x19ff4a0;
	Node0x19ff5c0 [shape=record,label="{for.end109:                                       \l  ret void\l}"];
}
