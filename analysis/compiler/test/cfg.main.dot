digraph "CFG for 'main' function" {
	label="CFG for 'main' function";

	Node0x10f1270 [shape=record,label="{entry:\l  %retval = alloca i32, align 4\l  %argc.addr = alloca i32, align 4\l  %argv.addr = alloca i8**, align 8\l  %a = alloca float, align 4\l  %b = alloca float, align 4\l  %i = alloca i32, align 4\l  %i10 = alloca i32, align 4\l  store i32 0, i32* %retval\l  store i32 %argc, i32* %argc.addr, align 4\l  store i8** %argv, i8*** %argv.addr, align 8\l  %0 = load i8*** %argv.addr, align 8\l  %arrayidx = getelementptr inbounds i8** %0, i64 1\l  %1 = load i8** %arrayidx, align 8\l  %call = call i32 @atoi(i8* %1) #2\l  %conv = sitofp i32 %call to float\l  store float %conv, float* %a, align 4\l  %2 = load i8*** %argv.addr, align 8\l  %arrayidx1 = getelementptr inbounds i8** %2, i64 2\l  %3 = load i8** %arrayidx1, align 8\l  %call2 = call i32 @atoi(i8* %3) #2\l  %conv3 = sitofp i32 %call2 to float\l  store float %conv3, float* %b, align 4\l  store i32 0, i32* %i, align 4\l  br label %for.cond\l}"];
	Node0x10f1270 -> Node0x10ef390;
	Node0x10ef390 [shape=record,label="{for.cond:                                         \l  %4 = load i32* %i, align 4\l  %cmp = icmp slt i32 %4, 10\l  br i1 %cmp, label %for.body, label %for.end\l|{<s0>T|<s1>F}}"];
	Node0x10ef390:s0 -> Node0x10ef3f0;
	Node0x10ef390:s1 -> Node0x10edb50;
	Node0x10ef3f0 [shape=record,label="{for.body:                                         \l  %5 = load float* %b, align 4\l  %cmp4 = fcmp oeq float %5, 0.000000e+00\l  br i1 %cmp4, label %if.then, label %if.else\l|{<s0>T|<s1>F}}"];
	Node0x10ef3f0:s0 -> Node0x10ef450;
	Node0x10ef3f0:s1 -> Node0x10ef4b0;
	Node0x10ef450 [shape=record,label="{if.then:                                          \l  %6 = load float* %a, align 4\l  %7 = load float* %a, align 4\l  %mul = fmul float %6, %7\l  %8 = load float* %a, align 4\l  %mul5 = fmul float %mul, %8\l  store float %mul5, float* %a, align 4\l  br label %if.end8\l}"];
	Node0x10ef450 -> Node0x10eda90;
	Node0x10ef4b0 [shape=record,label="{if.else:                                          \l  %9 = load float* %a, align 4\l  %cmp6 = fcmp une float %9, 0.000000e+00\l  br i1 %cmp6, label %if.then7, label %if.end\l|{<s0>T|<s1>F}}"];
	Node0x10ef4b0:s0 -> Node0x10ef510;
	Node0x10ef4b0:s1 -> Node0x10ef570;
	Node0x10ef510 [shape=record,label="{if.then7:                                         \l  %10 = load float* %a, align 4\l  %11 = load float* %b, align 4\l  %div = fdiv float %10, %11\l  store float %div, float* %a, align 4\l  br label %if.end\l}"];
	Node0x10ef510 -> Node0x10ef570;
	Node0x10ef570 [shape=record,label="{if.end:                                           \l  br label %if.end8\l}"];
	Node0x10ef570 -> Node0x10eda90;
	Node0x10eda90 [shape=record,label="{if.end8:                                          \l  %12 = load float* %a, align 4\l  %inc = fadd float %12, 1.000000e+00\l  store float %inc, float* %a, align 4\l  br label %for.inc\l}"];
	Node0x10eda90 -> Node0x10edaf0;
	Node0x10edaf0 [shape=record,label="{for.inc:                                          \l  %13 = load i32* %i, align 4\l  %inc9 = add nsw i32 %13, 1\l  store i32 %inc9, i32* %i, align 4\l  br label %for.cond\l}"];
	Node0x10edaf0 -> Node0x10ef390;
	Node0x10edb50 [shape=record,label="{for.end:                                          \l  %14 = load float* %a, align 4\l  store float %14, float* %b, align 4\l  store i32 0, i32* %i10, align 4\l  br label %for.cond11\l}"];
	Node0x10edb50 -> Node0x10edbb0;
	Node0x10edbb0 [shape=record,label="{for.cond11:                                       \l  %15 = load i32* %i10, align 4\l  %cmp12 = icmp slt i32 %15, 10\l  br i1 %cmp12, label %for.body13, label %for.end17\l|{<s0>T|<s1>F}}"];
	Node0x10edbb0:s0 -> Node0x10edc10;
	Node0x10edbb0:s1 -> Node0x10edcd0;
	Node0x10edc10 [shape=record,label="{for.body13:                                       \l  %16 = load float* %b, align 4\l  %inc14 = fadd float %16, 1.000000e+00\l  store float %inc14, float* %b, align 4\l  br label %for.inc15\l}"];
	Node0x10edc10 -> Node0x10edc70;
	Node0x10edc70 [shape=record,label="{for.inc15:                                        \l  %17 = load i32* %i10, align 4\l  %inc16 = add nsw i32 %17, 1\l  store i32 %inc16, i32* %i10, align 4\l  br label %for.cond11\l}"];
	Node0x10edc70 -> Node0x10edbb0;
	Node0x10edcd0 [shape=record,label="{for.end17:                                        \l  %18 = load i32* %retval\l  ret i32 %18\l}"];
}
